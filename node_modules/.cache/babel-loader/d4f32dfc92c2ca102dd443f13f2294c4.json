{"ast":null,"code":"import _objectSpread from\"/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{FETCH_REGISTER_REQUEST,FETCH_REGISTER_SUCCESS,FETCH_REGISTER_FAILURE}from'../types/RegisterTypes';var initialState={loading:false,data:[],error:''};export var RegisterReducer=function RegisterReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_REGISTER_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case FETCH_REGISTER_SUCCESS:return{loading:false,data:action.payload,error:''};case FETCH_REGISTER_FAILURE:return{loading:false,data:[],error:action.payload};default:return state;}};","map":{"version":3,"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/src/redux/reducer/RegisterReducer.tsx"],"names":["FETCH_REGISTER_REQUEST","FETCH_REGISTER_SUCCESS","FETCH_REGISTER_FAILURE","initialState","loading","data","error","RegisterReducer","state","action","type","payload"],"mappings":"4JAAA,OAAQA,sBAAR,CAA+BC,sBAA/B,CAAsDC,sBAAtD,KAAmF,wBAAnF,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAG,KADO,CAEjBC,IAAI,CAAG,EAFU,CAGjBC,KAAK,CAAG,EAHS,CAArB,CAMA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA5BL,YAA4B,IAAfM,CAAAA,MAAe,2CAC1D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKV,CAAAA,sBAAL,CACI,sCACOQ,KADP,MAEIJ,OAAO,CAAG,IAFd,GAMA,IAAKH,CAAAA,sBAAL,CACI,MAAO,CACHG,OAAO,CAAG,KADP,CAEHC,IAAI,CAAGI,MAAM,CAACE,OAFX,CAGHL,KAAK,CAAG,EAHL,CAAP,CAMA,IAAKJ,CAAAA,sBAAL,CACA,MAAO,CACHE,OAAO,CAAG,KADP,CAEHC,IAAI,CAAG,EAFJ,CAGHC,KAAK,CAAGG,MAAM,CAACE,OAHZ,CAAP,CAKA,QAAU,MAAOH,CAAAA,KAAP,CArBtB,CAuBP,CAxBM","sourcesContent":["import {FETCH_REGISTER_REQUEST,FETCH_REGISTER_SUCCESS,FETCH_REGISTER_FAILURE} from '../types/RegisterTypes';\n\n\nconst initialState = {\n    loading : false,\n    data : [],\n    error : ''\n}\n\nexport const RegisterReducer = (state=initialState,action:any) => {\n        switch(action.type) {\n            case FETCH_REGISTER_REQUEST :\n                return {\n                    ...state,\n                    loading : true\n\n                }\n\n                case FETCH_REGISTER_SUCCESS :\n                    return {\n                        loading : false,\n                        data : action.payload,\n                        error : ''\n                    }\n\n                    case FETCH_REGISTER_FAILURE : \n                    return {\n                        loading : false,\n                        data : [],\n                        error : action.payload\n                    }\n                    default : return state;\n        }\n}"]},"metadata":{},"sourceType":"module"}