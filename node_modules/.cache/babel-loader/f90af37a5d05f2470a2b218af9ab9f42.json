{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.argsOrArgArray = void 0;\nvar isArray = Array.isArray;\n\nfunction argsOrArgArray(args) {\n  return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n\nexports.argsOrArgArray = argsOrArgArray;","map":{"version":3,"mappings":";;;;;;AAAQ,WAAO,GAAKA,KAAK,QAAjB;;AAMR,SAAgBC,cAAhB,CAAkCC,IAAlC,EAAmD;AACjD,SAAOA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBC,OAAO,CAACF,IAAI,CAAC,CAAD,CAAL,CAA5B,GAAwCA,IAAI,CAAC,CAAD,CAA5C,GAAmDA,IAA1D;AACD;;AAFDG","names":["Array","argsOrArgArray","args","length","isArray","exports"],"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/rxjs/src/internal/util/argsOrArgArray.ts"],"sourcesContent":["const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n"]},"metadata":{},"sourceType":"script"}