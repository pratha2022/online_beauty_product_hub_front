{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isInteropObservable = void 0;\n\nvar observable_1 = require(\"../symbol/observable\");\n\nvar isFunction_1 = require(\"./isFunction\");\n\nfunction isInteropObservable(input) {\n  return isFunction_1.isFunction(input[observable_1.observable]);\n}\n\nexports.isInteropObservable = isInteropObservable;","map":{"version":3,"mappings":";;;;;;;AACA;;AACA;;AAGA,SAAgBA,mBAAhB,CAAoCC,KAApC,EAA8C;AAC5C,SAAOC,wBAAWD,KAAK,CAACE,uBAAD,CAAhB,CAAP;AACD;;AAFDC","names":["isInteropObservable","input","isFunction_1","observable_1","exports"],"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/rxjs/src/internal/util/isInteropObservable.ts"],"sourcesContent":["import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n"]},"metadata":{},"sourceType":"script"}