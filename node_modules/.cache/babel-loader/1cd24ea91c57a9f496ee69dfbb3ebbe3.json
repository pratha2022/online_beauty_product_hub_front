{"ast":null,"code":"import{FETCH_REGISTER_REQUEST,FETCH_REGISTER_SUCCESS,FETCH_REGISTER_FAILURE}from'../types/RegisterTypes';import{registerationAPI}from'../service/registrationservice/index';export var fetchRegisterRequest=function fetchRegisterRequest(){return{type:FETCH_REGISTER_REQUEST};};export var fetchRegisterSuccess=function fetchRegisterSuccess(data){return{type:FETCH_REGISTER_SUCCESS,payload:data};};export var fetchRegisterFailure=function fetchRegisterFailure(error){return{type:FETCH_REGISTER_FAILURE,payload:error};};export var registerAction=function registerAction(data,onSuccess){return function(dispatch){dispatch(fetchRegisterRequest);registerationAPI(data).then(function(response){var register=response.data.user;if(response.status===200){localStorage.setItem('jwt',response.data.jwt);dispatch(fetchRegisterSuccess(register));onSuccess();}}).catch(function(error){var errorMsg=error.message;dispatch(fetchRegisterFailure(errorMsg));});};};","map":{"version":3,"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/src/redux/action/RegisterAction.tsx"],"names":["FETCH_REGISTER_REQUEST","FETCH_REGISTER_SUCCESS","FETCH_REGISTER_FAILURE","registerationAPI","fetchRegisterRequest","type","fetchRegisterSuccess","data","payload","fetchRegisterFailure","error","registerAction","onSuccess","dispatch","then","response","register","user","status","localStorage","setItem","jwt","catch","errorMsg","message"],"mappings":"AAAA,OAASA,sBAAT,CAAiCC,sBAAjC,CAAyDC,sBAAzD,KAAuF,wBAAvF,CACA,OAASC,gBAAT,KAAiC,sCAAjC,CACA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACtC,MAAO,CACHC,IAAI,CAAEL,sBADH,CAAP,CAGH,CAJM,CAKP,MAAO,IAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,IAAD,CAAe,CAC/C,MAAO,CACHF,IAAI,CAAEJ,sBADH,CAEHO,OAAO,CAAED,IAFN,CAAP,CAIH,CALM,CAMP,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAgB,CAChD,MAAO,CACHL,IAAI,CAAEH,sBADH,CAEHM,OAAO,CAAEE,KAFN,CAAP,CAIH,CALM,CAMP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACJ,IAAD,CAAYK,SAAZ,CAA+B,CACzD,MAAO,UAACC,QAAD,CAAmB,CACtBA,QAAQ,CAACT,oBAAD,CAAR,CACAD,gBAAgB,CAACI,IAAD,CAAhB,CACKO,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMC,CAAAA,QAAQ,CAAGD,QAAQ,CAACR,IAAT,CAAcU,IAA/B,CACA,GAAIF,QAAQ,CAACG,MAAT,GAAoB,GAAxB,CAA6B,CACzBC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BL,QAAQ,CAACR,IAAT,CAAcc,GAA1C,EACAR,QAAQ,CAACP,oBAAoB,CAACU,QAAD,CAArB,CAAR,CACAJ,SAAS,GACZ,CACJ,CARL,EASKU,KATL,CASW,SAAAZ,KAAK,CAAI,CACZ,GAAMa,CAAAA,QAAQ,CAAGb,KAAK,CAACc,OAAvB,CACAX,QAAQ,CAACJ,oBAAoB,CAACc,QAAD,CAArB,CAAR,CACH,CAZL,EAaH,CAfD,CAgBH,CAjBM","sourcesContent":["import { FETCH_REGISTER_REQUEST, FETCH_REGISTER_SUCCESS, FETCH_REGISTER_FAILURE } from '../types/RegisterTypes';\nimport { registerationAPI } from '../service/registrationservice/index';\nexport const fetchRegisterRequest = () => {\n    return {\n        type: FETCH_REGISTER_REQUEST\n    }\n}\nexport const fetchRegisterSuccess = (data: any) => {\n    return {\n        type: FETCH_REGISTER_SUCCESS,\n        payload: data\n    }\n}\nexport const fetchRegisterFailure = (error: any) => {\n    return {\n        type: FETCH_REGISTER_FAILURE,\n        payload: error\n    }\n}\nexport const registerAction = (data: any, onSuccess: any) => {\n    return (dispatch: any) => {\n        dispatch(fetchRegisterRequest)\n        registerationAPI(data)\n            .then(response => {\n                const register = response.data.user;\n                if (response.status === 200) {\n                    localStorage.setItem('jwt', response.data.jwt)\n                    dispatch(fetchRegisterSuccess(register));\n                    onSuccess()\n                }\n            })\n            .catch(error => {\n                const errorMsg = error.message\n                dispatch(fetchRegisterFailure(errorMsg))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}