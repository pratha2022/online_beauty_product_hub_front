{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsapAction = void 0;\n\nvar AsyncAction_1 = require(\"./AsyncAction\");\n\nvar immediateProvider_1 = require(\"./immediateProvider\");\n\nvar AsapAction = function (_super) {\n  __extends(AsapAction, _super);\n\n  function AsapAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n\n  AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n\n    scheduler.actions.push(this);\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider_1.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  };\n\n  AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay != null && delay > 0 || delay == null && this.delay > 0) {\n      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n    }\n\n    if (!scheduler.actions.some(function (action) {\n      return action.id === id;\n    })) {\n      immediateProvider_1.immediateProvider.clearImmediate(id);\n      scheduler._scheduled = undefined;\n    }\n\n    return undefined;\n  };\n\n  return AsapAction;\n}(AsyncAction_1.AsyncAction);\n\nexports.AsapAction = AsapAction;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAEA;AAAmCA;;AACjC,sBAAsBC,SAAtB,EAA0DC,IAA1D,EAA6G;AAA7G,gBACEC,kBAAMF,SAAN,EAAiBC,IAAjB,KAAsB,IADxB;;AAAsBE;AAAoCA;;AAEzD;;AAESC,wCAAV,UAAyBJ,SAAzB,EAAmDK,EAAnD,EAA6DC,KAA7D,EAA8E;AAAjB;AAAAA;AAAiB;;AAE5E,QAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,GAAG,CAA9B,EAAiC;AAC/B,aAAOJ,iBAAMK,cAAN,CAAoBC,IAApB,CAAoB,IAApB,EAAqBR,SAArB,EAAgCK,EAAhC,EAAoCC,KAApC,CAAP;AACD;;AAEDN,aAAS,CAACS,OAAV,CAAkBC,IAAlB,CAAuB,IAAvB;AAIA,WAAOV,SAAS,CAACW,UAAV,KAAyBX,SAAS,CAACW,UAAV,GAAuBC,sCAAkBC,YAAlB,CAA+Bb,SAAS,CAACc,KAAV,CAAgBC,IAAhB,CAAqBf,SAArB,EAAgCgB,SAAhC,CAA/B,CAAhD,CAAP;AACD,GAXS;;AAYAZ,wCAAV,UAAyBJ,SAAzB,EAAmDK,EAAnD,EAA6DC,KAA7D,EAA8E;AAAjB;AAAAA;AAAiB;;AAI5E,QAAKA,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAG,CAA1B,IAAiCA,KAAK,IAAI,IAAT,IAAiB,KAAKA,KAAL,GAAa,CAAnE,EAAuE;AACrE,aAAOJ,iBAAMe,cAAN,CAAoBT,IAApB,CAAoB,IAApB,EAAqBR,SAArB,EAAgCK,EAAhC,EAAoCC,KAApC,CAAP;AACD;;AAID,QAAI,CAACN,SAAS,CAACS,OAAV,CAAkBS,IAAlB,CAAuB,UAACC,MAAD,EAAO;AAAK,mBAAM,CAACd,EAAP,KAAcA,EAAd;AAAgB,KAAnD,CAAL,EAA2D;AACzDO,4CAAkBQ,cAAlB,CAAiCf,EAAjC;AACAL,eAAS,CAACW,UAAV,GAAuBK,SAAvB;AACD;;AAED,WAAOA,SAAP;AACD,GAhBS;;AAiBZ;AAlCA,EAAmCK,yBAAnC;;AAAaC","names":["__extends","scheduler","work","_super","_this","AsapAction","id","delay","requestAsyncId","call","actions","push","_scheduled","immediateProvider_1","setImmediate","flush","bind","undefined","recycleAsyncId","some","action","clearImmediate","AsyncAction_1","exports"],"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/rxjs/src/internal/scheduler/AsapAction.ts"],"sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    if (!scheduler.actions.some((action) => action.id === id)) {\n      immediateProvider.clearImmediate(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}