{"ast":null,"code":"import axios from'axios';export var cartPostAPI=function cartPostAPI(id,num){var user_id=localStorage.getItem('user_details');var data={\"user_id\":user_id,\"product_list\":[{\"qty\":num,\"product\":id}]};return axios.post(\"/carts\",{data:data});};export var cartupdateAPI=function cartupdateAPI(id,num,updatedata,cartdataid){var _updatedata$attribute,_updatedata$attribute2;var user_id=localStorage.getItem('user_details');var product_list=[{product:id===null||id===void 0?void 0:id.id,qty:num}];updatedata===null||updatedata===void 0?void 0:(_updatedata$attribute=updatedata.attributes)===null||_updatedata$attribute===void 0?void 0:(_updatedata$attribute2=_updatedata$attribute.product_list)===null||_updatedata$attribute2===void 0?void 0:_updatedata$attribute2.forEach(function(ele){var _ele$product,_ele$product$data;if((ele===null||ele===void 0?void 0:(_ele$product=ele.product)===null||_ele$product===void 0?void 0:(_ele$product$data=_ele$product.data)===null||_ele$product$data===void 0?void 0:_ele$product$data.id)===(id===null||id===void 0?void 0:id.id)){product_list=product_list.map(function(ele1){if(ele1.product==id.id)ele1.qty=ele1.qty+num;return ele1;});}else{var _ele$product2,_ele$product2$data;product_list.push({product:ele===null||ele===void 0?void 0:(_ele$product2=ele.product)===null||_ele$product2===void 0?void 0:(_ele$product2$data=_ele$product2.data)===null||_ele$product2$data===void 0?void 0:_ele$product2$data.id,qty:ele===null||ele===void 0?void 0:ele.qty});}});var data={user_id:user_id,product_list:product_list,isOrderPlaced:true};return axios.put(\"/carts/\".concat(cartdataid),{data:data});};export var cartGetAPI=function cartGetAPI(data){return axios.get(\"/carts/\".concat(data,\"?populate=productImage,user_id,product_list.product.productImage,product_list\"));};export var cartPopulateAPI=function cartPopulateAPI(user_id){return axios.get(\"/carts?populate=user_id,product_list.product.productImage,product_list.product&filters[user_id]=\".concat(user_id));};export var orderplacedAPI=function orderplacedAPI(cart){cart.map(function(item){if(item.attributes.isOrderPlaced==false)return item.attributes.isOrderPlaced===true;});var user_id=localStorage.getItem('user_details');axios.get(\"/carts?populate=user_id,product_list.product.productImage,product_list.product&filters[user_id]=\".concat(user_id));};export var cartDeleteAPI=function cartDeleteAPI(id,item,qty,cartID){var ID=cartID[0].id;var user_id=localStorage.getItem('user_details');var product_list=[{product:id,qty:qty}];cartID.forEach(function(ele){var _ele$attributes,_ele$attributes$produ;var check=ele===null||ele===void 0?void 0:(_ele$attributes=ele.attributes)===null||_ele$attributes===void 0?void 0:(_ele$attributes$produ=_ele$attributes.product_list)===null||_ele$attributes$produ===void 0?void 0:_ele$attributes$produ.filter(function(plist,index){return plist.id!==item.id;});product_list=check.map(function(item,index){return{product:item.product.data.id,qty:item.qty};});});var data={user_id:user_id,product_list:product_list};return axios.put(\"/carts/\".concat(ID),{data:data});};","map":{"version":3,"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/src/redux/service/cartservice/CartService.tsx"],"names":["axios","cartPostAPI","id","num","user_id","localStorage","getItem","data","post","cartupdateAPI","updatedata","cartdataid","product_list","product","qty","attributes","forEach","ele","map","ele1","push","isOrderPlaced","put","cartGetAPI","get","cartPopulateAPI","orderplacedAPI","cart","item","cartDeleteAPI","cartID","ID","check","filter","plist","index"],"mappings":"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","sourcesContent":["import axios from 'axios';\nexport const cartPostAPI = (id: any, num: any) => {\n    const user_id = localStorage.getItem('user_details')\n    let data = {\n        \"user_id\": user_id,\n        \"product_list\": [\n            {\n                \"qty\": num,\n                \"product\": id\n            }\n        ]\n    }\n    return axios.post(`/carts`, { data })\n}\nexport const cartupdateAPI = (id: any, num: any, updatedata: any, cartdataid: any) => {\n    const user_id = localStorage.getItem('user_details')\n    let product_list: any[] = [{ product: id?.id, qty: num }];\n    updatedata?.attributes?.product_list?.forEach((ele: any) => {\n        if (ele?.product?.data?.id === id?.id) {\n            product_list = product_list.map(ele1 => {\n                if (ele1.product == id.id)\n                    ele1.qty = ele1.qty + num\n                return ele1;\n            })\n        } else {\n            product_list.push({ product: ele?.product?.data?.id, qty: ele?.qty })\n        }\n    })\n    let data: any = { user_id, product_list, isOrderPlaced: true }\n    return axios.put(`/carts/${cartdataid}`, { data })\n}\nexport const cartGetAPI = (data: any) => {\n    return axios.get(`/carts/${data}?populate=productImage,user_id,product_list.product.productImage,product_list`)\n}\nexport const cartPopulateAPI = (user_id: any) => {\n    return axios.get(`/carts?populate=user_id,product_list.product.productImage,product_list.product&filters[user_id]=${user_id}`)\n}\nexport const orderplacedAPI = (cart: any) => {\n    cart.map((item: any) => {\n        if (item.attributes.isOrderPlaced == false)\n            return item.attributes.isOrderPlaced === true\n    })\n    const user_id = localStorage.getItem('user_details')\n    axios.get(`/carts?populate=user_id,product_list.product.productImage,product_list.product&filters[user_id]=${user_id}`)\n}\nexport const cartDeleteAPI = (id: any, item: any, qty: any, cartID: any) => {\n    const ID = cartID[0].id;\n    const user_id = localStorage.getItem('user_details')\n    let product_list: any[] = [{ product: id, qty: qty }];\n    cartID.forEach((ele: any) => {\n        let check = ele?.attributes?.product_list?.filter((plist: any, index: number) => {\n            return plist.id !== item.id\n        })\n        product_list = check.map((item: any, index: number) => {\n            return {\n                product: item.product.data.id,\n                qty: item.qty\n            }\n        })\n    })\n    let data: any = { user_id, product_list }\n    return axios.put(`/carts/${ID}`, { data })\n}"]},"metadata":{},"sourceType":"module"}