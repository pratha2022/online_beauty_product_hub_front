{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SequenceError = void 0;\n\nvar createErrorClass_1 = require(\"./createErrorClass\");\n\nexports.SequenceError = createErrorClass_1.createErrorClass(function (_super) {\n  return function SequenceErrorImpl(message) {\n    _super(this);\n\n    this.name = 'SequenceError';\n    this.message = message;\n  };\n});","map":{"version":3,"mappings":";;;;;;;AAAA;;AAoBaA,wBAAmCC,oCAC9C,UAACC,MAAD,EAAO;AACL,kBAASC,iBAAT,CAAsCC,OAAtC,EAAqD;AACnDF,UAAM,CAAC,IAAD,CAAN;;AACA,SAAKG,IAAL,GAAY,eAAZ;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD,GAJD;AAIC,CAN2C,CAAnC","names":["exports","createErrorClass_1","_super","SequenceErrorImpl","message","name"],"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/rxjs/src/internal/util/SequenceError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n"]},"metadata":{},"sourceType":"script"}