{"ast":null,"code":"import _objectSpread from\"/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{FETCH_CARTID_REQUEST,FETCH_CARTID_SUCCESS,FETCH_CARTID_FAILURE}from'../types/CartIdTypes';var initialState={loading:false,cartID:[],error:''};export var CartIdReducer=function CartIdReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_CARTID_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case FETCH_CARTID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,cartID:action.payload,error:''});case FETCH_CARTID_FAILURE:return{loading:false,cartID:[],error:action.payload};default:return state;}};","map":{"version":3,"sources":["/media/bytes-pratha/workspaces/projects/online_beauty_product_hub_front/src/redux/reducer/CartIdReducer.tsx"],"names":["FETCH_CARTID_REQUEST","FETCH_CARTID_SUCCESS","FETCH_CARTID_FAILURE","initialState","loading","cartID","error","CartIdReducer","state","action","type","payload"],"mappings":"4JAAA,OAASA,oBAAT,CAA+BC,oBAA/B,CAAqDC,oBAArD,KAAiF,sBAAjF,CACA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAE,KADQ,CAEjBC,MAAM,CAAE,EAFS,CAGjBC,KAAK,CAAE,EAHU,CAArB,CAKA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAuC,IAAtCC,CAAAA,KAAsC,2DAA9BL,YAA8B,IAAhBM,CAAAA,MAAgB,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKV,CAAAA,oBAAL,CACI,sCACOQ,KADP,MAEIJ,OAAO,CAAE,IAFb,GAKJ,IAAKH,CAAAA,oBAAL,CACI,sCACOO,KADP,MAEIJ,OAAO,CAAE,KAFb,CAGIC,MAAM,CAAEI,MAAM,CAACE,OAHnB,CAIIL,KAAK,CAAE,EAJX,GAMJ,IAAKJ,CAAAA,oBAAL,CACI,MAAO,CACHE,OAAO,CAAE,KADN,CAEHC,MAAM,CAAE,EAFL,CAGHC,KAAK,CAAEG,MAAM,CAACE,OAHX,CAAP,CAKJ,QAAS,MAAOH,CAAAA,KAAP,CApBb,CAsBH,CAvBM","sourcesContent":["import { FETCH_CARTID_REQUEST, FETCH_CARTID_SUCCESS, FETCH_CARTID_FAILURE } from '../types/CartIdTypes';\nconst initialState = {\n    loading: false,\n    cartID: [],\n    error: ''\n}\nexport const CartIdReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case FETCH_CARTID_REQUEST:\n            return {\n                ...state,\n                loading: true\n\n            }\n        case FETCH_CARTID_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                cartID: action.payload,\n                error: ''\n            }\n        case FETCH_CARTID_FAILURE:\n            return {\n                loading: false,\n                cartID: [],\n                error: action.payload\n            }\n        default: return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}